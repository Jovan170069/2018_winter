char_string <- "This is chars"
string_vector <- c("abc", "def")
print(string_vector)
get_user_input <- function() {
user_input <- readline(prompt="Enter a value:")
cat("The user_input is: ", user_input)
user_input <- as.integer(user_input)
cat("\nThe multiple of 5 is ", user_input * 5)
}
get_user_input() # calling the function
debugSource('C:/Users/yen/Dropbox/Codes/BC3407/week1/demo1_r.r')
55
# Variables
# Numeric 22.1
# Integer 2L
x_num = 22.1
print(x_num)
num_vector <- c(11, 22, 33)
print(num_vector)
# print first value in vector
print(num_vector[1])
logical_vector <- c(TRUE, FALSE)
print(logical_vector)
char_string <- "This is chars"
string_vector <- c("abc", "def")
print(string_vector)
get_user_input <- function() {
user_input <- readline(prompt="Enter a value:")
cat("The user_input is: ", user_input)
user_input <- as.integer(user_input)
cat("\nThe multiple of 5 is ", user_input * 5)
}
get_user_input() # calling the function
debugSource('C:/Users/yen/Dropbox/Codes/BC3407/week1/demo1_r.r')
sgds <- seq(10, 100, 10)
rates <- c(0.73102, 2.95677, 0.63185, 0.55916, 0.99542)
results <- cbind(sgds*rates[1], sgds*rates[2])
results
sgds <- seq(10, 100, 10)
rates <- c(0.73102, 2.95677, 0.63185, 0.55916, 0.99542)
currencies <- c("SGD", "MYR")
results <- cbind(currencies[1]=sgds*rates[1], sgds*rates[2])
help("cbine")
help("cbind")
sgds <- seq(10, 100, 10)
rates <- c(0.73102, 2.95677, 0.63185, 0.55916, 0.99542)
currencies <- c("SGD", "MYR")
results <- cbind(SGD=sgds*rates[1], MYR=sgds*rates[2])
results
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
help("hist")
x <- seq(1, 100, 2)
y <- seq(2, 200, 2)
hist(x, breaks = 10)
hist(x)
hist(x, breaks = 20)
help("hist")
z <- list(a=3, b = ('aaa', 'bbb'))
z <- list(a=3, b = c('aaa', 'bbb'))
View(z)
View(z)
z[["a"]]
z$a
z$b
ls()
x <- 1123
help("grep")
grep(“【0-1”，x)
grep(“【0-9]”，x)
grep(“^【0-9]”，x)
if(!grepl("^[0-9]+$",n))
}
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
readfloat("Enter")
help("grepl")
help("grepl")
x <- 1122
grepl("[0-9]", x)
x <- "11yy"
grepl("[0-9]", x)
grepl("[0-9]$", x)
grepl("^[0-9]$", x)
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
readfloat()
readfloat("Enter a value:")
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
readfloat()
readfloat("Enter a value:")
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
salesLeads()
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_slides.R')
salesLeads()
for count in seq(1, 9) {}
for (count in seq(1, 9)) {}
for (count in seq(1, 9)) {}
for (count in seq(1, 9)) { print(count)}
#utility functions
sqrtPlus1 <- function(v)
{
return(sqrt(x)+1)
}
k<-seq(-1:10)
sqrtPlus1(k)
sqrtPlus1 <- function(x)
{
return(sqrt(x)+1)
}
k<-seq(-1:10)
sqrtPlus1(k)
sqrt(-1)
combn(c("Ali", "Benny", "Catarina", "Danny", "Elise"),3)
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
readfloat("Enter")
getcwd()
getwd()
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
n <- 10
while ( n > 0 ) {
cat(n, sep = "  ")
n = n - 1
}
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
cat(z)
z
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
n <- 10
y <- "abc"
z <- c(y)
z
n <- 10
y <- "abc"
z <- as.vector(y)
z
n <- 10
y <- "abc"
z <- strsplit(y)
n <- 10
y <- "abc"
z <- strsplit(y, "")
z
cat(z, sep = "--")
z
z
n <- 10
y <- "abc"
zz <- strsplit(y, "")
zz
zz <- strsplit(y, fixed = TRUE)
zz <- strsplit(y, " ")
zz
source('C:/Users/yen/Dropbox/Codes/BC3407/scrapbook/week3_demo.R')
for (token in seq(1,10)) {
cat(token)
}
dice <- sample(1:6, 1000)
dice <- sample(1:6, 1000, replace=TRUE)
summary(dice)
dice_count <- c(dice == 2)
dice_count
count(dice_count == TRUE)
summary(dice_count)
dim(dice_count)
hist(dice)
n <- 10
dice <- sample(1:6, 1000)
count_two <- 0
for (each in dice) {
cat(each)
}
dice <- sample(1:6, 20)
count_two <- 0
for (each in dice) {
if (each == 2) {
count_two <- count_two + 1
}
}
count_two
is.na(count_two)
new_data <- c(11, NA, 88)
is.na(new_data)
comb(c(11, 22, 44))
comb(c(11, 22, 44, 66), 2)
combn(c(11, 22, 44, 66), 2)
help("lm")
a <- c(11, 22, 33)
n(a) <- c("a", "b", "c")
ages<-c(23,19,18)
names(v)<-c(“John”, “Ali”, “Bala”)
v <- c(1, 2, 3)
names(v)<-c(“John”, “Ali”, “Bala”)
v[1]
v <- c(v, 4)
v
v
n(v) <- c("a", "b", "c", "d")
n(v) <- c('a', 'b', 'c', 'd')
names(v) <- c('a', 'b', 'c', 'd')
v
names(v) <- c('a', 'b', 'c', "d")
v
v['a']
length(v)
append(v, 99, after 5)
append(v, 99, after=5)
append(v, 99, after=0)
help("append")
v[-1]
v
2 %in% v
x[2 %in% v]
v[2 %in% v]
v[v %in% 2]
v[!v %in% 2]
ages <- c(19, 20, 32, 20)
fv <- factor(ages)
fv
c(fv)
summary(fv)
help("cut")
cut(ages)
cut(ages, breaks=2)
cut(ages, breaks=3)
times = seq(15, 50)
times
seq(15, 50, by=3)
help("stack")
v1 <- c(1, 2, 3)
v2 <- c(4, 5, 6)
stack(v1, v2)
stack(list(v1, v2))
list(v1, v2)
list(v1=v1, v2=v2)
stack(list(v1=v1, v2=v2))
cc <- stack(list(v1=v1, v2=v2))
help("split")
ss <- split(cc$values, cc$ind)
ss
cc
lrt <- list("abc", 123, 33)
lrt[1]
lrt[[1]]
lrt
summary(lrt)
a <- c(11, 22, 33)
dim(a)
1:10
dim(1:10)
A <- 1:10
A
dim(A)
help("dim")
c(4, 6)
dim(A) <- c(4, 6)
A <- 1:24
dim(A) <- c(4, 6)
A
A[3]
A[3,]
A[,4]
b <- matrix(1:5, 3, 2)
b <- matrix(0:5, 3, 2)
b
b <- matrix(0:5, 3, 2, byrow = TRUE)
b
a
cbind(a, a)
rbind(a, a)
m <- cbind(a, a)
mode(a)
mode(m)
m
dim(n) <- a
dim(a)
a
diag(a)
t(a)
matrix(0, 3, 2)
a
data.frame(a, a)
data.frame(x=a, y=a)
d <- data.frame(x=a, y=a)
d[3]
d[x]
d[1, 2]
d[,2]
d[1]
d[x]
d$x
e <- data.frame(1:5, 6:10)
e
e[3]
e[,3]
e <- data.frame(x = 1:5, y =6:10)
e
e[1]
e[2]
e[,1]
e[1,2]
help("with")
with(d, {print(summary(x))})
with(d, {plot(x)})
help("within")
s <- c(1.2, 1.2, 1.4)
m <- c(20, 30, 20)
l <- c(100, 110, 201)
d <- data.frame(s, m, l)
d
print(d)
summary(d)
var(d)
cor(d)
help("apply")
help("tabulate")
data("iris")
tapply(iris$Sepal.Width, iris$Species, median)
summary(iris)
View(iris)
View(iris)
help("data")
data()
1:50
sample(100:1000, size=50)
sample(letters[1:4], 50)
sample(letters[1:4], 50, replace=T)
rep(c("Jurong", "Punggol", "Yishun"), 50)
rep(c("Jurong", "Punggol", "Yishun"), 50)
col1 <- 1:50
col2 <- sample(1:100, size=50)
col3 <- sample(letters[1:3], 50, replace=T)
col4 <- rep(c("Jurong", "Punggol", "Yishun"), 50)
dt <- data.table(col1, col2, col3, col4)
library(data.table)
packages(data.table)
packages("data.table")
package("data.table")
install.packages("data.table")
library(data.table)
dt <- data.table(col1, col2, col3, col4)
dt
dt[col3 == 'c']
dt <- data.table(col1, col2, col3, col4)
dt[col3 == "c", mean(col2), col4]
dt[col3 == "d"]
dt[col3 == "c"]
dt[, mean(col2), by=col4]
dt[col3 == "a", mean(col2)]
dt[col3="c"  & col4="Yishun"]
dt[col3=="c"  & col4=="Yishun"]
dt[,.(col1)]
dt[,.(col1, col2)]
dt[order(col2)]
dt[, col5 := col1+col2]
dt
view(dt)
View(dt)
df <- data.frame(col=1:10, col2=2:20)
df <- data.frame(col=1:10, col2=11:20)
View(df)
df[1:3]
dt[1:3]
dt[1:3,]
dt[,1:3]
dt[1:5, mean(col2)]
dt[, mean(col2)]
#install.packages("XML")
library(XML)
population <- "http://www.umsl.edu/~lindquists/sample.html"
population.table <- readHTMLTable(population, which=2)
length(population.table)
head(population.table)
#install.packages("XML")
library(XML)
population <- "http://www.umsl.edu/~lindquists/sample.html"
population.table <- readHTMLTable(population)
length(population.table)
head(population.table)
x <- 1:6:2
x <- seq(1:6:2)
x <- seq(0:6:2)
x <- seq(0:6,2)
x <- 0:6,2
x <- 0:6
x <- 0:3
x
x > 2
x <- 0:2
x < 2
x <- 0:3 + 3
x
source('C:/Users/yen/Dropbox/Codes/2018_winter/week7_dataframe.R')
View(data)
max(data$Salary)
setwd("C://Users//yen//Dropbox//Codes//2018_winter")
data <- read.csv("salariesByIndustry.csv")
dt <- data.frame(data)
View(dt)
max(dt$Salary)
result <- tapply(dt$Salary, dt$CompanyType, mean)
result
result <- tapply(dt$Bonus, dt$CompanyType, mean)
result["Financials"]
result <- tapply(dt$Bonus, dt$CompanyType, mean)
result["Financials"]
result
df$avg_wages <- (df$Salary + df$Bonus)/12
# a. Which executive received the highest salary?
# b. What is the average bonus distributed by company in financial sector?
# c. Programmatically adds a new field that denotes the average wages computed by averaging
# out individual’s salary plus bonus over 12 months.
# d. Create a summary report in .txt format denoting the average wages (from c) by industry.
setwd("C://Users//yen//Dropbox//Codes//2018_winter")
data <- read.csv("salariesByIndustry.csv")
df <- data.frame(data)
highest_salary <- max(df$Salary) # a
result <- tapply(df$Bonus, df$CompanyType, mean)
result["Financials"] #b
df$avg_wages <- (df$Salary + df$Bonus)/12
df
head(df)
result_d <- tapply(df$avg_wages, df$CompanyType, mean)
write.csv(result_d, "dataframe_result.csv")
which.max(df$Salary)
df$ExecutiveName[which.max(df$Salary)]
which.max(df$Salary)
setwd("C:\\Users\\yen\\Dropbox\\Codes\\2018_winter")
data <- read.csv("salariesByIndustry.csv")
View(data)
dt <- data.table(data)
library("data.table")
dt <- data.table(data)
View(dt)
dt[,max(Salary)]
dt[CompanyType=="Financials", mean(Bonus)]
dt[, monthly:= (Salary + Bonus)/12]
dt
dt[, CompanyType]
dt[, unique(CompanyType)]
dt[, mean(monthly), by=list(total_industry)]
dt[, mean(monthly), by=list(CompanyType)]
max_salary <- dt[,(ExecutiveName, max(Salary))]
max_salary <- dt[,.(ExecutiveName, max(Salary))]
max_salary
dt[,.(ExecutiveName, max(Salary))]
dt[Salary == max(Salary),.(ExecutiveName, max(Salary))]
library("data.table")
dt <- data.table(data)
# find the max
max_salary_person <- dt[Salary == max(Salary),.(ExecutiveName, max(Salary))]
mean_Bonus <- dt[CompanyType=="Financials", mean(Bonus)] #
dt[, monthly:= (Salary + Bonus)/12] # c, add in new col, :=
dt[, mean(monthly), by=list(CompanyType)]
dest_file <- file("datatable_result.txt","w")
write.table(dt, dest_file)
close(dest_file)
library("data.table")
dt <- data.table(data)
# find the max
max_salary_person <- dt[Salary == max(Salary),.(ExecutiveName, max(Salary))]
mean_Bonus <- dt[CompanyType=="Financials", mean(Bonus)] #
dt[, monthly:= (Salary + Bonus)/12] # c, add in new col, :=
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
dest_file <- file("datatable_result.txt","w")
write.table(dt, data_to_file)
close(dest_file)
library("data.table")
dt <- data.table(data)
# find the max
max_salary_person <- dt[Salary == max(Salary),.(ExecutiveName, max(Salary))]
mean_Bonus <- dt[CompanyType=="Financials", mean(Bonus)] #
dt[, monthly:= (Salary + Bonus)/12] # c, add in new col, :=
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
dest_file <- file("datatable_result.txt","w")
write.table(dt, data_to_file)
close(dest_file)
data_to_file
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
data_to_file <- as.data.table(data_to_file)
dest_file <- file("datatable_result.txt","w")
writeLines(dt, as.character(data_to_file))
close(dest_file)
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
data_to_file <- as.data.table(data_to_file)
dest_file <- file("datatable_result.txt","w")
writeLines(dt, as.character(data_to_file))
close(dest_file)
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
data_to_file <- as.data.table(data_to_file)
dest_file <- file("datatable_result.txt","w")
write.table(dt, data_to_file)
close(dest_file)
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
data_to_file <- as.data.frame(data_to_file)
dest_file <- file("datatable_result.txt","w")
write.table(dt, data_to_file)
close(dest_file)
data_to_file <- dt[, mean(monthly), by=list(CompanyType)]
data_to_file <- as.data.frame(data_to_file)
dest_file <- file("datatable_result.txt","w")
write.table(data_to_file, dest_file)
close(dest_file)
