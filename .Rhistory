dd <- c(10, 20, 30)
dd
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
ls()
x <- 5
ls()
?lm
z <- scan()
source('~/Documents/demo1_r.r')
source('~/Documents/demo1_r.r')
source('~/Documents/demo1_r.r')
x
y
cor(x,y)
cor(y,x)
sum(x)
max(x)
min(x)
any(x>15)
all(x>15)
cumsum(x)
help("cumsum")
x <- c(1:10)
x
y <- seq(1, 10, 2)
y
y <- seq(100, 1, -5)
y
library("datasets")
data(package="datasets")
AirPassengers
help("AirPassanger")
help("AirPassenger")
help("AirPassengers")
Titanic
AirPassengers
AirPassengers$Jan
x <- seq(1:100)
y <- seq(200, 300)
x
y
z <- cbind(x, y)
dim(x)
y <- seq(201:300)
z <- cbind(x, y)
x
z
source('~/Documents/demo1_r.r')
source('~/Documents/demo1_r.r')
source('~/Documents/demo1_r.r')
source('~/Documents/demo3.r')
source('~/Documents/demo3.r')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
dice <- sample(1, 100, replace = TRUE)
cat("\n",dice)
dice <- sample(6, 100, replace = TRUE)
cat("\n",dice)
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
dice <- sample(6, 10, replace = TRUE)
cat("\n",dice)
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
dice <- sample(6, 10, replace = TRUE)
dice_count <- c(dice == 2)
cat("\n",dice, "\n", dice_count)
dice <- sample(6, 10, replace = TRUE)
dice_count <- c(dice == 2)
cat("\n",dice, "\n", dice_count)
dice_count_num <- count(dice_count == TRUE)
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
dice <- sample(6, 10, replace = TRUE)
dice_count <- c(dice == 2)
cat("\n",dice, "\n", dice_count)
#dice_count_num <- sum(dice_count == TRUE)
hist(dice_count)
hist(dice)
source('~/Dropbox/Codes/BC3407/week3/week3_R_demo1.R')
summary(dice)
dice
dice <- sample(6, 10, replace = TRUE)
for (each in dice) {
cat("Now processing ", each)
}
dice <- sample(6, 10, replace = TRUE)
for (each in dice) {
cat("Now processing ", each, "\n")
}
for (each in seq(1:10)) {
print(each)
}
if (each == 2) {
print("The dice is 2: ", each)
}
dice <- sample(6, 10, replace = TRUE)
for (each in dice) {
if (each == 2) {
print("The dice is 2: ", each)
}
cat("Now processing ", each, "\n")
}
x <- c(1, 22, 33, NA)
cat(is.na(x))
factorial(10)
choose(10, 3)
sqrt(2)
n <- readline(prompt=">")
n
grepl("[0-9]", n)
grepl("^[0-9]", n)
n <- "123abc"
grepl("^[0-9]", n)
grepl("^[0-9]$", n)
dice
dice_count
sum(dice_count == TRUE)
sum(dice == 2)
dice
dice <- sample(6, 10, replace = TRUE)
# [1] 2 1 3 2 2 3 2 5 3 3
dice_count <- c(dice == 2)
#  [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE
# [8] FALSE FALSE  TRUE
sum(dice_count == TRUE)
sum(dice == 2) #
x <- "abc"
x
charToRaw(x)
x <- c(11, 22, 33)
x <- c(x, 22)
x
typeof(x)
which.min(x)
order(x)
class(x)
y <- c(11, 22, 44, NA)
y
is.na(y)
sum(is.na(y))
sum(!is.na(y))
x <- c("a", "b", "c")
x
typeof(x)
t <- "abc"
typeof(t)
t
x
grep("a", x)
x[1]
substr(x, 1, 2)
substr(y, 1, 2)
substr(t, 1, 2)
x
x = "abc"
paste(x, "d")
paste(x,"d")
paste(x,"d", sep="")
x <- "fegsab"
order(x)
y <= c("a", "b", "a")
y <- c("a", "b", "a")
order(y)
as.character(x)
x
as.vector()
as.vector(x)
ages <- c(11, 22, 33)
names(ages) <- c("John", "Jenny", "Jane")
ages
ages["John"]
ages[ages >30]
ages[-1]
ages
ages[-2]
ages
ages[ages %in% 2]
x <- c(11, 22, 33)
x[x %in% 22]
y <- c("John", "Jane", "Ann")
y["J" %in% y]
y[y %in% "J"]
y[y %in% "John"]
y[y %in% "John"]
x <- c(19, 20, 30)
x <- c(19, 20, 30, 20)
x_cat <- factor(x)
x_cat
summary(x_cat)
x_cat <- factor(x, break=2)
x_cat <- factor(x, breaks=2)
x
x_cat <- factor(x, breaks=3)
ages <- c(19, 38, 33, 19)
cut(ages, breaks=2)
letters
month.abb
month.name
month.name[1:5]
my_list <- list("abc", 123)
my_list
my_list[[1]]
my_list[[1][1]]
as("abc",vector)
as
help("as")
my_list
my_list[1]
my_list[[1]]
help("dim")
x <- "This is a try"
strsplit(x)
as.vector(strsplit(x))
as.vector(strsplit(x, " "))
strsplit(x, " ")
x
as.vector(x)
y <= "thisis"
y <- "thisis"
as.vector(y)
as.vector(strsplit(y, " ")
)
a <- 1:20
a
dim(a)
a
dim(a) <- c(2, 5)
dim(a) <- c(4, 5)
a
a[3, 4]
a[3]
using.matrix()
b <- matrix(1:20)
b
b <- matrix(1:20,3)
b <- matrix(1:20,4, 5)
b
d
d <- 1:10
d
dim(d) <- c(2, 5, 1)
d
d <- seq(1:30)
length()
length(s)
length(d)
dim(d) <- c(2, 5, 3)
d
data.frame(x=seq(1:10), y=seq(21:30))
data.frame(x=1:10, y=21:30)
data.frame(x=1:10, y=sample(1:20, 10))
d <- data.frame(x=a)
d
d <- data.frame(x=a, y=a)
d
d[1]
a <- 1:10
b <- 21:20
d <- data.frame(x=a, y=b)
d
d[1]
d[,2]
d[,1]
help("with")
help("tapply")
x <- c(1, 2, 3, 4, 5)
cor(x)
y <- c("a", "a", "b", "b", "b")
tapply(x, y)
tapply(x, y, median)
tapply(x, y, mean)
help("lapply")
lapply(x, mean)
d
apply(d,1, sum)
apply(d,2, sum)
lapply(d,1)
lapply(d,1,cos)
lapply(d$x,cos)
sapply(d$x,cos)
mapply(d$x,cos)
mapply(d,cos)
data("Titanic")
d <- data("Titanic")
d
head(Titanic)
data("Titanic")
summary(Titanic)
data(Orange)
summary(Orange)
data(Titanic)
summary(Titanic)
Orange
head(Orange)
help(Orange)
tapply(Orange$age, Orange$Tree, mean)
tapply(Orange$age, Orange$Tree, median)
tapply(Orange$circumference, Orange$Tree, mean)
plot(Orange$age, Orange$circumference)
summary(Orange)
data("ToothGrowth")
head(ToothGrowth)
tail(ToothGrowth)
help("ToothGrowth")
summary(ToothGrowth)
tapply(ToothGrowth$len, ToothGrowth$supp, mean)
tapply(ToothGrowth$len, ToothGrowth$supp, median)
x <- c(11, 22, 33)
y < x *2
y <- x *2
y
d <- data.frame(x, y)
d
min(d)
unique(d)
tabulate(d)
b <- matrix(1:10, 5, 2)
b
b[3]
b[3,]
str1 <- "aaa"
paste(str1, str1)
paste(str1, str1, "-")
help("paste")
paste(str1, str1, sep="-")
order(str1)
b<-paste(str1, str1, sep="-")
order(b)
c1 <- c(letters)
c1
order(c1)
sample(1:10)
sample(1:10, 100)
sample(1:10, 5)
help("sample")
sample(1:10)
colors <- ("R", "G", "G")
colors <- c("R", "G", "G")
factor(colors)
summary(factor(colors))
a <- c(10, 11, 15, 13, 10)
factor(a)
cut(a, breaks = 3)
cut(a, breaks = 2)
summary(cut(a, breaks = 2))
a <- list(10, "b")
a
a[[1]
]
a[[1]]
a[1]
typeof(a)
class()
class(a)
mode(a)
a <- 1:24
a
dim(a) <- c(4, 6)
a
typeof(a)
a[3, 45]
a[3, 4]
a[3]
a[,4]
a[3,]
b <- 0:5
b
matrix(b, 3, 2)
c <- matrix(b, 3, 2)
a
x <- 1: 10
x
cbind(x, x)
rbind(x, x)
e <- 1:12
e
dim(e) <- c(2, 3, 2)
e
a <- 1:10
a
b <- a *2
b
data.frame(a, b)
data.frame(x=a, x = b)
data.frame(x=a, y = b)
d <- data.frame(x=a, y = b)
d
d[1]
d[,2]
d[1, 2]
help("tapply")
x <- c(13.2, 14, 15, 16)
y <- c("C", "C", "N", "N")
tapply(x, y, median)
d
summary(d)
help(ToothGrowth)
data("ToothGrowth")
head(ToothGrowth)
tail(ToothGrowth)
summary(ToothGrowth)
tapply(ToothGrowth$len, ToothGrowth$supp, mean)
tapply(ToothGrowth$len, ToothGrowth$supp, min)
letters
month.abb
month.name
y <- 2018
for (i in 1:3) {}
y <- 2018
for (i in 1:3)
{ print(paste(i, " year after is ", i+y))}
seq(9,45,by=5)
seq(10,50,by=3)
seq(10,50,by=3)
seq(from=-10, to=10, length.out=3)
x<-5
1:x-1
1:(x-1)
rep(letters[1:4],3)
rep(letters[1:4], each =3)
letters
month.abb
month.name
C <- as.Date("2016-02-01")
D as.Date("2016-06-15")
D <- as.Date("2016-06-15")
k <- seq.Date(D,C, by = "-1 month")
k
C
D
diff(k)
C <- as.Date("2017-12-01")
k <- seq.Date(D,C, by = "-1 month")
x <- 2018
cat("This year is", x, "\n")
for (i in seq(1,3)) {}
for (i in seq(1,3)) {cat(i, " year after" , x, "is ", x+i, "\n")}
for (i in seq(1,3)) {print(paste(i, " year after" , x, "is ", x+i, "\n"))}
for (i in seq(1,3)) {print(paste(i, " year after" , x, "is ", x+i))}
ages <- c(10:20)
ages
ages <- sample(10:30, 5)
ages
ages <- sample(10:30, 50)
ages <- sample(10:30, 10)
ages
f_ages <- factor(ages)
f_ages
ages <- c(10, 20, 10, 15, 10)
f_ages <- factor(ages)
f_ages
apply(ages, 1, log)
x <- seq(1:10)
y <- seq(11:20)
df <- data.frame(x, y)
df
apply(df, MARGIN = 1, log)
df
unique(df)
tabulate(df)
testR
data <- read.csv("songs.csv")
getwd()
setwd("Dropbox/Codes/2018_winter/")
data <- read.csv("songs.csv")
data
head(data)
View(data)
dt <- fread("songs.csv")
df <- data.frame(scan("songs.csv"))
data <- scan("songs.csv")
library(data.table)
install.packages("data.table")
lbrary(data.table)
library(data.table)
dt <- fread("songs.csv")
View(dt)
dt[Artist == "Shakira"]
dt[Streams > 15000]
dt[Streams > 15000,.(Artist)]
dt[Streams > 15000,.(Artist, Streams]
dt[Streams > 15000,.(Artist, Streams)]
head(data)
df <- data.frame(data)
head(df)
View(df)
d <- data.table(df)
View(df)
View(d)
dt[Streams > 15000,.(Artist, Streams, `Track Name`)]
